// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioProject;

namespace PortfolioProject.Migrations
{
    [DbContext(typeof(PortFolioDBContext))]
    [Migration("20210517140557_addedmodel")]
    partial class addedmodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("PortfolioProject.Models.Proficiency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("description")
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("proficiencies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            description = "Html",
                            name = "HTML"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("projectDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("projectImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("projectTitle")
                        .HasColumnType("TEXT");

                    b.Property<int>("userID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("userID");

                    b.ToTable("projects");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            projectDescription = "simple bank app",
                            projectImageUrl = "https://res.cloudinary.com/decagom/image/upload/v1621193621/porfolio/2021-05-11_8_s13r6d.png",
                            projectTitle = "Desktop Bank Application",
                            userID = 1
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("aboutInfo")
                        .HasColumnType("TEXT");

                    b.Property<string>("cvUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("gitUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("loginPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("profilePictureUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("tagLine")
                        .HasColumnType("TEXT");

                    b.Property<string>("twitterUrl")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Phone = "08036142253",
                            aboutInfo = "this is me",
                            cvUrl = "https://drive.google.com/file/d/1_SXwWUlIGkkug8G-cs7-ROmfxtNkE7hl/view?usp=sharing",
                            email = "youngsolomon072@gmail.com",
                            firstName = "Young",
                            gitUrl = "https://github.com/bobblybit",
                            lastName = "Solomon",
                            loginPassword = "12345",
                            profilePictureUrl = "https://res.cloudinary.com/decagom/image/upload/v1621192597/FaceApp_1611401857576_2_bim7ey.jpg",
                            tagLine = "Lets build something great together",
                            twitterUrl = "https://twitter.com/home?lang=en"
                        });
                });

            modelBuilder.Entity("PortfolioProject.Models.Project", b =>
                {
                    b.HasOne("PortfolioProject.Models.User", "implementedBy")
                        .WithMany("projects")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("implementedBy");
                });

            modelBuilder.Entity("PortfolioProject.Models.User", b =>
                {
                    b.Navigation("projects");
                });
#pragma warning restore 612, 618
        }
    }
}
